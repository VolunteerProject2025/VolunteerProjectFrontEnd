import { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import axios from "axios";

export function CreateSchedule() {
    // const { projectId } = useParams(); // üõë L·∫•y ID d·ª± √°n t·ª´ URL

    const navigate = useNavigate();

    // const [formData, setFormData] = useState({
    //     date: "",
    //     startTime: "",
    //     endTime: "",
    //     description: ""
    // });
    // console.log("üìå D·ªØ li·ªáu g·ª≠i ƒëi:", formData);

    const { projectId } = useParams(); // L·∫•y ID c·ªßa project t·ª´ URL
    const [formData, setFormData] = useState({
        project: projectId,
        startTime: "",
        endTime: ""
    });
    const [project, setProject] = useState(null); // L∆∞u th√¥ng tin project ƒë·ªÉ l·∫•y startDate v√† endDate

    useEffect(() => {
        // L·∫•y th√¥ng tin project t·ª´ backend
        fetch(`http://localhost:3000/projects/${projectId}`)
            .then((res) => res.json())
            .then((data) => setProject({
                ...data,
                startDate: data.startDate.split("T")[0], // Chuy·ªÉn v·ªÅ YYYY-MM-DD
                endDate: data.endDate.split("T")[0]     // Chuy·ªÉn v·ªÅ YYYY-MM-DD
            })
        );
    }, [projectId]);


    // const handleChange = (e) => {
    //     setFormData({ ...formData, [e.target.name]: e.target.value });
    // };
    const handleChange = (e) => {
        const { name, value } = e.target;
    
        setFormData((prev) => {
            if (name === "startTime") {
                return {
                    ...prev,
                    startTime: value,
                    endTime: prev.endTime && prev.endTime < value ? value : prev.endTime, // C·∫≠p nh·∫≠t endTime n·∫øu c·∫ßn
                };
            } 
            
            if (name === "endTime" && value < prev.startTime) {
                alert("‚è≥ Th·ªùi gian k·∫øt th√∫c kh√¥ng th·ªÉ nh·ªè h∆°n th·ªùi gian b·∫Øt ƒë·∫ßu!");
                return prev; // Kh√¥ng c·∫≠p nh·∫≠t state n·∫øu kh√¥ng h·ª£p l·ªá
            }
    
            return { ...prev, [name]: value };
        });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            const token = localStorage.getItem("token");

            const response = await axios.post("http://localhost:3000/schedules/project/:projectId/schedules", {
                ...formData,
                project: projectId // üõë G·ª≠i k√®m projectId
            }, {
                headers: { Authorization: `Bearer ${token}` }
            });

            alert("L·ªãch tr√¨nh ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!");
            console.log(response.data);
            console.log(project.startDate);
            

            // üöÄ Chuy·ªÉn h∆∞·ªõng v·ªÅ trang chi ti·∫øt d·ª± √°n
            navigate(`/projects/${projectId}`);
        } catch (error) {
            console.error("L·ªói khi t·∫°o l·ªãch tr√¨nh", error);
            alert("C√≥ l·ªói x·∫£y ra! Vui l√≤ng th·ª≠ l·∫°i.");
        }
    };

    return (
        <div className="form-container">
            <h2>T·∫°o L·ªãch Tr√¨nh</h2>
            <form onSubmit={handleSubmit}>
                <input 
                type="date" 
                name="date" 
                value={formData.date} 
                onChange={handleChange} 
                min={project?.startDate} // Gi·ªõi h·∫°n ng√†y b·∫Øt ƒë·∫ßu
                max={project?.endDate}
                 required />
                <input 
                type="time" 
                name="startTime" 
                value={formData.startTime} 
                onChange={handleChange}
                
                 required />
                <input type="time" name="endTime" value={formData.endTime}
                 onChange={handleChange} required />
                <textarea 
                name="description" 
                value={formData.description} 
                onChange={handleChange}
                
                placeholder="M√¥ t·∫£" />

                <button type="submit">üìÖ T·∫°o L·ªãch Tr√¨nh</button>
            </form>
        </div>
    );
}
